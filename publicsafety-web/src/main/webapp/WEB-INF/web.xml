<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring-security.xml,classpath:spring-application.xml</param-value>
	</context-param>
	<context-param>
	   <param-name>defaultHtmlEscape</param-name>
	   <param-value>true</param-value>
	</context-param>
	<filter>
		<filter-name>encode</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encode</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>o2oFilter</filter-name>
		<filter-class>com.hisign.publicsafety.web.filter.O2oWebFilter</filter-class>
		<init-param>
			<param-name>cookieTimeout</param-name>
			<!-- cookie超时时间，单位分钟 -->
			<param-value>30</param-value>
	    </init-param>
	</filter>
	<filter-mapping>
		<filter-name>o2oFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	<!-- Defend Hack -->
	<filter>
		<filter-name>defendHack</filter-name>
		<filter-class>com.hisign.publicsafety.web.filter.DefendHackFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>defendHack</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>    
        <listener-class>    
            org.springframework.web.context.request.RequestContextListener    
        </listener-class>    
   	</listener>  
	<listener>    
        <listener-class>    
            com.hisign.publicsafety.web.listener.O2oSessionListener    
        </listener-class>    
   	</listener>  
	
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<url-pattern>*.html</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<url-pattern>/restfulService/*</url-pattern>
	</servlet-mapping>
	
	<session-config>
		<session-timeout>60</session-timeout>
	</session-config>
	
	<servlet>
	   <servlet-name>uploadFileServiceServlet</servlet-name>
	   <servlet-class>com.hisign.publicsafety.web.filter.UploadFileServlet</servlet-class>
	</servlet>
	
	<servlet-mapping>
	   <servlet-name>uploadFileServiceServlet</servlet-name>
	   <url-pattern>/ccp/uploadFileService</url-pattern>
	</servlet-mapping>

	<!-- 权限  Spring Security3.1 的权限过滤-->
  	<filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>
            org.springframework.web.filter.DelegatingFilterProxy
        </filter-class>
   	</filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
	
	<welcome-file-list>
		<welcome-file>login.html</welcome-file>
	</welcome-file-list>
	
	
	<!-- 指明对于如下资源文件不采用spring的过滤器 -->
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.css</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.xml</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.swf</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.zip</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.gif</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.jpg</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.png</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.js</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.woff</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.woff2</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>/checkpreload.htm</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>/status.taobao</url-pattern>
    </servlet-mapping>
</web-app>
